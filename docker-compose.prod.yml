services:
  db:
    image: postgres:17.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_DB_FILE: /run/secrets/postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
  backend:
    image: ncyril/orga-planning-backend:1.0
    depends_on:
      - db
    env_file:
      - path: ./back/.env
    ports:
      - "3001:3001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.planning.myplaylab.fr`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.services.backend.loadbalancer.server.port=3001"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
  frontend:
    image: ncyril/orga-planning-frontend:latest
    command: npm run start
    ports:
      - "3000:3000"
    env_file:
      - path: ./front/.env
        required: false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`planning.myplaylab.fr`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
  traefik:
    restart: unless-stopped
    image: traefik:v3.3
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=cyril.nguyen@ynov.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.http.middlewares.cors.headers.customresponseheaders.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.cors.headers.customresponseheaders.Access-Control-Allow-Methods=GET,POST,OPTIONS"
      - "traefik.http.middlewares.cors.headers.customresponseheaders.Access-Control-Allow-Headers=*"

volumes:
  postgres_data:

secrets:
  postgres_password:
    file: postgres_password.txt
  postgres_user:
    file: postgres_user.txt
  postgres_db:
    file: postgres_db.txt
